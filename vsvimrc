" VsVim looks in the following folders: HOME, VIM and USERPROFILE
" TODO: consider which bindings should be moved to the left hand

" I let Visual Studio handle those: 
" <C-c>
" <C-v>
" <C-a>
" <C-x>
" Associate <A-j> with Edit.LineDown in VS for Intellisense selection
" Associate <A-k> with Edit.LineUp in VS for Intellisense selection

" General settings
" ----------------
set incsearch
set hlsearch
set ignorecase
set cursorline
set backspace=indent,eol,start
set vsvim_useeditorindent
set vsvim_useeditordefaults
set vsvimcaret=40
set whichwrap=b,s,<,>,h,l   " wrap backspace and cursors correctly

set clipboard=unnamed
set number

let mapleader=","

nnoremap <Esc> :noh<CR>
nnoremap <leader>rs :source C:\Users\Julien\.babun\cygwin\home\Julien\.vsvimrc<CR>
nnoremap <leader>vs :edit C:\Users\Julien\.babun\cygwin\home\Julien\.vsvimrc<CR>

" Start/stop debugging and running
" --------------------------------
" ta=test again, tc=test continue, td=test debug, sd=start debug, 
" sc=start continue
map <Leader>ta :vsc EditorContextMenus.CodeWindow.TestDriven.NET.RerunTests<CR>
map <Leader>tc :vsc EditorContextMenus.CodeWindow.TestDriven.NET.RunTests<CR>
map <Leader>td :vsc EditorContextMenus.CodeWindow.TestDriven.NET.Debugger<CR>
map <Leader>sd :vsc Debug.Start<CR> 
map <Leader>sc :vsc Debug.StartWithoutDebugging<CR> 

" While debugging
" ---------------
"TODO
"map <A-j> :vsc Debug.StepOver<CR>
"map <A-k> :vsc Debug.StepOut<CR>
"map <A-l> :vsc Debug.StepInto<CR>
"map <A-r> :vsc Debug.RunToCursor<CR>
"map <A-s> :vsc Debug.SetNextStatement<CR>
"map <A-h> :vsc 

" Show windows
" ------------
map <Leader>wa :vsc Debug.Autos<CR>
map <Leader>wb :vsc View.BookmarkWindow<CR>
map <Leader>wc :vsc View.CommandWindow<CR>
map <Leader>we :vsc Debug.Exceptions<CR>
map <Leader>wf :vsc View.FullScreen<CR>
map <Leader>wg :vsc Team.Git.GoToGitChanges<CR>
map <Leader>wh :vsc Window.AutoHideAll<CR>
map <Leader>wi :vsc Debug.Immediate<CR>
map <Leader>wk :vsc Tools.CustomizeKeyboard<CR>
map <Leader>wl :vsc Debug.Locals<CR>
map <Leader>wm :vsc Debug.Modules<CR>
map <Leader>wo :vsc Debug.Output<CR>
map <Leader>wp :vsc Debug.Breakpoints<CR>
map <Leader>wr :vsc View.FindResults1<CR>
map <Leader>wse :vsc View.SolutionExplorer<CR>
map <Leader>wsr :vsc View.FindSymbolResults<CR>
map <Leader>wt :vsc Debug.Threads<CR>
map <Leader>wv :vsc VsVim.Options<CR>
" Tools.Options, Debug.OptionsAndSettings
" Folding
" -------
" Use za to fold
" zc and zo to close and open folds
" zC to close all. 
" But built-in zO to open all doesn't work.
map zm :vsc Edit.CollapsetoDefinitions<CR>
" noremap zC :vsc Edit.CollapseAllOutlining <return>
noremap zO :vsc Edit.ExpandAllOutlining <return>
" noremap zt :vsc Edit.ToggleOutliningExpansion <return>
" noremap zT :vsc Edit.ToggleAllOutlining <return>
" noremap zc :vsc Edit.CollapseCurrentRegion <return>
" noremap zo :vsc Edit.ExpandCurrentRegion <return>
" noremap zd :vsc Edit.CollapsetoDefinitions <return>
" noremap zb :vsc Edit.CollapseBlockcurrentblock <return>
" noremap zB :vsc Edit.CollapseAllincurrentblock <return>


" Navigation
" ----------
" map gb :vsc View.NavigateBackward<CR>
" map gB :vsc View.NavigateForward<CR>
nmap <C-O> :vsc View.NavigateBackward<CR>
nmap <C-I> :vsc View.NavigateForward<CR>

" Next and previous tab
nnoremap gk gt
nnoremap gj gT

" TODO: C-P and C-N should be for intellisense completion instead
" It's also useful to bind those keys in VS as well
noremap <C-n> :vsc Edit.FindNext<CR>
noremap <C-p> :vsc Edit.FindPrevious<CR>
noremap <C-f> :vsc Edit.Find<CR>

" gd goes to definition by default
map gr :vsc Edit.FindAllReferences<CR>

map gpm :vsc Edit.PreviousMethod<CR>
map gnm :vsc Edit.NextMethod<CR>

map gnb :vsc Edit.NextBookmarkInDocument<CR>
map gNb :vsc Edit.NextBookmark<CR>
map gNB :vsc Edit.NextBookmark<CR>
map gpb :vsc Edit.PreviousBookmarkInDocument<CR>
map gPb :vsc Edit.PreviousBookmark<CR>
map gPB :vsc Edit.PreviousBookmark<CR>

" keep search results in the center of the screen
nnoremap n nzz
nnoremap  N Nzz
"nnoremap <silent> * *zz
"nnoremap <silent> # #zz
"nnoremap <silent> g* g*zz
"nnoremap <silent> g# g#zz

" Edit.GoToFindResults1Location
" Edit.GoToFindResults1NextLocation
" Edit.GoToFindResults1PrevLocation
" Edit.GoToFindResults2Location
" Edit.GoToFindResults2NextLocation
" Edit.GoToFindResults2PrevLocation

" Various GUI features
" --------------------
map <Leader>tb :vsc Edit.ToggleBookmark<CR>

map <Leader>tp :vsc Debug.ToggleBreakpoint<CR>
map <Leader>tep :vsc Debug.EnableBreakpoint<CR>

" Keep tab 
map <Leader>kt :vsc Window.PinTab<CR>
" Open tab
map <Leader>ot :vsc Window.KeepTabOpen<CR>

"Show definiton
map <Leader>sd :vsc Edit.PeekDefinition<CR>
"Show info
map <Leader>si :vsc Edit.QuickInfo<CR>
" Show parameter info
map <Leader>sp :vsc Edit.ParameterInfo<CR>
" Yank parameter info
map <Leader>yp :vsc Edit.CopyParameterTip<CR>

" Making edits
" ------------
" add empty lines with no insert mode
map <S-enter> O<Esc>
map <enter> o<Esc>

" delete char without yank
noremap x "_x
noremap X "_X

" H/L is more natural than 0/$
map H ^
map L $

"copy line without CR
noremap Y ^y$

noremap + :vsc Edit.CommentSelection <return>
noremap - :vsc Edit.UncommentSelection <return>

" Delete trailing spaces
nnoremap <Leader>dw :%s/\s\+$//e<CR>:nohl<CR>

noremap == :vsc Edit.FormatDocument <return>
"Edit.FormatSelection
"vnoremap <Tab> >
"vnoremap <S-Tab> <

" reselect visual block after indent
"vnoremap < <gv
"vnoremap > >gv
" -------------------------------------------------------------------------------------------------------------------

"TODO: surround with and insert snippet

" Delete extraneous blank lines
":nnoremap <silent> <Leader>ds :g/^$/,/./-j<CR>:nohl<CR>
":nnoremap <silent> <Leader>dd :let _s=@/<CR>:%s/\s\+$//e<CR>:let @/=_s<CR>:nohl<CR>

"nmap zX :vsc Edit.UndoClose<CR>
"nnoremap <leader>B :vsc Build.BuildSolution<CR>

"nmap <leader>s :vsc Debug.Start<CR>
"nmap <leader>S :vsc Debug.StopDebugging<CR>
"nmap <leader>bd :vsc Debug.DisableAllBreakpoints<CR>
"nmap <leader>be :vsc Debug.EnableAllBreakpoints<CR>

"map <Leader>ta :vsc Tools.TestDriven.Net.Abort

" Build --> Ctrl-Shift-B
" Debug.DetachAll --> maybe later
" DebuggerContextMenus.ProcessesWindow.ContinueProcess
" DebuggerContextMenus.ProcessesWindow.DetachProcess
" DebuggerContextMenus.ProcessesWindow.TerminateProcess


" Found many vsvimrc files on github:
" https://github.com/jaredpar/VsVim/wiki/Settings-Reference
" https://github.com/aburok/mysettings/blob/master/Vim/_vsvimrc
" https://github.com/aburok/mysettings/blob/master/VisualStudio/vscommands.txt
" https://github.com/pwnb0t/dotfiles/blob/master/.vsvimrc
" https://github.com/BruceKpersonal/.vim/blob/master/.vsvimrc
" https://github.com/bab491/vimscripts/blob/master/_vsvimrc
" https://github.com/psibar/dotfiles/blob/master/vim/_vsvimrc
" https://github.com/cakn/vimfiles/blob/master/_vsvimrc
" https://github.com/potz/dotfiles/blob/401ff11fafdb80c927387a471cacc5a5a2b53c28/.vsvimrc
" https://github.com/StanislawSwierc/Profile/blob/d268cc58366fa8d6a347b3e98bd4daff8257d212/_vsvimrc

" VS-QuickNavigation extension
" (https://visualstudiogallery.msdn.microsoft.com/229dde61-7402-4c6c-b440-bfc95102f755)
" nnoremap <leader>f :vsc View.QuickFile<CR>

" noremap <leader>ru :vsc Edit.RemoveAndSort <return>

" Fold like ^m^o, expand all #regions and leave cursor in the current region
" nnoremap z1 j?# region<cr>mzzMNNNNNNNNNN'z/ÿÿÿ<cr>zz
" Fold like z1, but only expand method regions
" nnoremap z2 j?# region.*Methods<cr>mzzMNNNNNNNNNN'z/ÿÿÿ<cr>zz

" Fold like z1, but also return cursor to last position
" nnoremap z8 mzzMgg/# region<cr>nnnnnnnnnn`z/ÿÿÿ<cr>zz
" Fold like ^m^o^m^m, but return cursor to last position
" nnoremap z9 mzzM`zzz

